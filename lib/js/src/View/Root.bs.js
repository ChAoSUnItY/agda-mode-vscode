// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var VSCode = require("rescript-vscode/lib/js/src/VSCode.bs.js");
var ReactDom = require("react-dom");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Chan$AgdaModeVscode = require("../Util/Chan.bs.js");
var View$AgdaModeVscode = require("./View.bs.js");
var Panel$AgdaModeVscode = require("./Panel/Panel.bs.js");

var vscode = acquireVsCodeApi();

var onRequest = Chan$AgdaModeVscode.make(undefined);

var onEventToView = Chan$AgdaModeVscode.make(undefined);

VSCode.Api.onMessage(function (stringifiedJSON) {
      var requestOrEvent = Curry._1(View$AgdaModeVscode.RequestOrEventToView.decode, JSON.parse(stringifiedJSON));
      if (requestOrEvent.TAG === /* Request */0) {
        return Chan$AgdaModeVscode.emit(onRequest, requestOrEvent._0);
      } else {
        return Chan$AgdaModeVscode.emit(onEventToView, requestOrEvent._0);
      }
    });

var onResponse = Chan$AgdaModeVscode.make(undefined);

Chan$AgdaModeVscode.on(onResponse, (function (response) {
        vscode.postMessage(View$AgdaModeVscode.ResponseOrEventFromView.encode({
                  TAG: 0,
                  _0: response,
                  [Symbol.for("name")]: "Response"
                }));
        
      }));

var onEventFromView = Chan$AgdaModeVscode.make(undefined);

Chan$AgdaModeVscode.on(onEventFromView, (function ($$event) {
        vscode.postMessage(View$AgdaModeVscode.ResponseOrEventFromView.encode({
                  TAG: 1,
                  _0: $$event,
                  [Symbol.for("name")]: "Event"
                }));
        
      }));

Belt_Option.forEach(Caml_option.nullable_to_opt(document.getElementById("root")), (function (element) {
        ReactDom.render(React.createElement(Panel$AgdaModeVscode.make, {
                  onRequest: onRequest,
                  onEventToView: onEventToView,
                  onResponse: onResponse,
                  onEventFromView: onEventFromView
                }), element);
        
      }));

exports.vscode = vscode;
exports.onRequest = onRequest;
exports.onEventToView = onEventToView;
exports.onResponse = onResponse;
exports.onEventFromView = onEventFromView;
/* vscode Not a pure module */
