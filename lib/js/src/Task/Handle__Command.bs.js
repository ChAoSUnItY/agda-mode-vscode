// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var $$Promise = require("reason-promise/lib/js/src/js/promise.bs.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Goal$AgdaModeVscode = require("../Goal.bs.js");
var Task$AgdaModeVscode = require("./Task.bs.js");
var Editor$AgdaModeVscode = require("../Editor.bs.js");
var Parser$AgdaModeVscode = require("../Parser.bs.js");
var Command$AgdaModeVscode = require("../Command.bs.js");
var View__Controller$AgdaModeVscode = require("../View__Controller.bs.js");
var Handle__InputMethod$AgdaModeVscode = require("./Handle__InputMethod.bs.js");

function handle(command) {
  var header = {
    TAG: 0,
    _0: Command$AgdaModeVscode.toString(command),
    [Symbol.for("name")]: "Plain"
  };
  if (typeof command === "number") {
    switch (command) {
      case /* Load */0 :
          return {
                  hd: {
                    TAG: 9,
                    _0: "$$$ Load",
                    [Symbol.for("name")]: "BenchStart"
                  },
                  tl: {
                    hd: Task$AgdaModeVscode.display({
                          TAG: 0,
                          _0: "Loading ...",
                          [Symbol.for("name")]: "Plain"
                        }, /* Nothing */0),
                    tl: {
                      hd: {
                        TAG: 8,
                        _0: (function (state) {
                            return $$Promise.map(state.editor.document.save(), (function (param) {
                                          return /* [] */0;
                                        }));
                          }),
                        [Symbol.for("name")]: "WithStateP"
                      },
                      tl: {
                        hd: {
                          TAG: 1,
                          _0: /* Load */0,
                          [Symbol.for("name")]: "AgdaRequest"
                        },
                        tl: {
                          hd: {
                            TAG: 10,
                            _0: "$$$ Load",
                            [Symbol.for("name")]: "BenchEnd"
                          },
                          tl: /* [] */0
                        }
                      }
                    }
                  }
                };
      case /* Quit */1 :
          return /* [] */0;
      case /* Restart */2 :
          return {
                  hd: {
                    TAG: 0,
                    _0: /* Load */0,
                    [Symbol.for("name")]: "DispatchCommand"
                  },
                  tl: /* [] */0
                };
      case /* Refresh */3 :
          return {
                  hd: {
                    TAG: 6,
                    _0: /* UpdateRange */0,
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: {
                    hd: {
                      TAG: 4,
                      _0: /* Refresh */3,
                      [Symbol.for("name")]: "Decoration"
                    },
                    tl: /* [] */0
                  }
                };
      case /* Compile */4 :
          return {
                  hd: {
                    TAG: 1,
                    _0: /* Compile */1,
                    [Symbol.for("name")]: "AgdaRequest"
                  },
                  tl: /* [] */0
                };
      case /* ToggleDisplayOfImplicitArguments */5 :
          return {
                  hd: {
                    TAG: 1,
                    _0: /* ToggleDisplayOfImplicitArguments */2,
                    [Symbol.for("name")]: "AgdaRequest"
                  },
                  tl: /* [] */0
                };
      case /* ShowConstraints */6 :
          return {
                  hd: {
                    TAG: 1,
                    _0: /* ShowConstraints */3,
                    [Symbol.for("name")]: "AgdaRequest"
                  },
                  tl: /* [] */0
                };
      case /* ShowGoals */7 :
          return {
                  hd: {
                    TAG: 1,
                    _0: /* ShowGoals */4,
                    [Symbol.for("name")]: "AgdaRequest"
                  },
                  tl: /* [] */0
                };
      case /* NextGoal */8 :
          return {
                  hd: {
                    TAG: 6,
                    _0: /* Next */1,
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* PreviousGoal */9 :
          return {
                  hd: {
                    TAG: 6,
                    _0: /* Previous */2,
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* Give */10 :
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, param) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 3,
                                      _0: goal,
                                      [Symbol.for("name")]: "Give"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return Task$AgdaModeVscode.prompt(header, {
                                      body: undefined,
                                      placeholder: "expression to give:",
                                      value: undefined
                                    }, (function (expr) {
                                        return {
                                                hd: {
                                                  TAG: 6,
                                                  _0: {
                                                    TAG: 1,
                                                    _0: goal,
                                                    _1: (function (param) {
                                                        return expr;
                                                      }),
                                                    [Symbol.for("name")]: "Modify"
                                                  },
                                                  [Symbol.for("name")]: "Goal"
                                                },
                                                tl: {
                                                  hd: {
                                                    TAG: 1,
                                                    _0: {
                                                      TAG: 3,
                                                      _0: goal,
                                                      [Symbol.for("name")]: "Give"
                                                    },
                                                    [Symbol.for("name")]: "AgdaRequest"
                                                  },
                                                  tl: /* [] */0
                                                }
                                              };
                                      }));
                        }),
                      _2: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* Refine */11 :
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 7,
                      _0: (function (goal) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 4,
                                      _0: goal,
                                      [Symbol.for("name")]: "Refine"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* Auto */12 :
          return {
                  hd: {
                    TAG: 8,
                    _0: (function (param) {
                        return $$Promise.resolved({
                                    hd: {
                                      TAG: 6,
                                      _0: {
                                        TAG: 7,
                                        _0: (function (goal) {
                                            return {
                                                    hd: {
                                                      TAG: 1,
                                                      _0: {
                                                        TAG: 6,
                                                        _0: goal,
                                                        [Symbol.for("name")]: "Auto"
                                                      },
                                                      [Symbol.for("name")]: "AgdaRequest"
                                                    },
                                                    tl: /* [] */0
                                                  };
                                          }),
                                        _1: {
                                          hd: {
                                            TAG: 5,
                                            _0: /* OutOfGoal */0,
                                            [Symbol.for("name")]: "Error"
                                          },
                                          tl: /* [] */0
                                        },
                                        [Symbol.for("name")]: "LocalOrGlobal"
                                      },
                                      [Symbol.for("name")]: "Goal"
                                    },
                                    tl: /* [] */0
                                  });
                      }),
                    [Symbol.for("name")]: "WithStateP"
                  },
                  tl: /* [] */0
                };
      case /* Case */13 :
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, param) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 7,
                                      _0: goal,
                                      [Symbol.for("name")]: "Case"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return Task$AgdaModeVscode.prompt(header, {
                                      body: "Please specify which variable you wish to split",
                                      placeholder: "variable to case split:",
                                      value: undefined
                                    }, (function (expr) {
                                        return {
                                                hd: {
                                                  TAG: 6,
                                                  _0: {
                                                    TAG: 1,
                                                    _0: goal,
                                                    _1: (function (param) {
                                                        return expr;
                                                      }),
                                                    [Symbol.for("name")]: "Modify"
                                                  },
                                                  [Symbol.for("name")]: "Goal"
                                                },
                                                tl: {
                                                  hd: {
                                                    TAG: 1,
                                                    _0: {
                                                      TAG: 7,
                                                      _0: goal,
                                                      [Symbol.for("name")]: "Case"
                                                    },
                                                    [Symbol.for("name")]: "AgdaRequest"
                                                  },
                                                  tl: /* [] */0
                                                }
                                              };
                                      }));
                        }),
                      _2: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* WhyInScope */14 :
          var placeholder = "name:";
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, expr) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 20,
                                      _0: expr,
                                      _1: goal,
                                      [Symbol.for("name")]: "WhyInScope"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return Task$AgdaModeVscode.prompt(header, {
                                      body: undefined,
                                      placeholder: placeholder,
                                      value: undefined
                                    }, (function (expr) {
                                        return {
                                                hd: {
                                                  TAG: 1,
                                                  _0: {
                                                    TAG: 20,
                                                    _0: expr,
                                                    _1: goal,
                                                    [Symbol.for("name")]: "WhyInScope"
                                                  },
                                                  [Symbol.for("name")]: "AgdaRequest"
                                                },
                                                tl: /* [] */0
                                              };
                                      }));
                        }),
                      _2: Task$AgdaModeVscode.prompt(header, {
                            body: undefined,
                            placeholder: placeholder,
                            value: undefined
                          }, (function (expr) {
                              return {
                                      hd: {
                                        TAG: 1,
                                        _0: {
                                          TAG: 21,
                                          _0: expr,
                                          [Symbol.for("name")]: "WhyInScopeGlobal"
                                        },
                                        [Symbol.for("name")]: "AgdaRequest"
                                      },
                                      tl: /* [] */0
                                    };
                            })),
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* Escape */15 :
          return {
                  hd: {
                    TAG: 8,
                    _0: (function (param) {
                        return $$Promise.resolved({
                                    hd: {
                                      TAG: 0,
                                      _0: {
                                        TAG: 13,
                                        _0: /* Deactivate */1,
                                        [Symbol.for("name")]: "InputMethod"
                                      },
                                      [Symbol.for("name")]: "DispatchCommand"
                                    },
                                    tl: {
                                      hd: {
                                        TAG: 2,
                                        _0: /* PromptInterrupt */0,
                                        [Symbol.for("name")]: "ViewEvent"
                                      },
                                      tl: /* [] */0
                                    }
                                  });
                      }),
                    [Symbol.for("name")]: "WithStateP"
                  },
                  tl: /* [] */0
                };
      
    }
  } else {
    switch (command.TAG | 0) {
      case /* SolveConstraints */0 :
          var normalization = command._0;
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 7,
                      _0: (function (goal) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 0,
                                      _0: normalization,
                                      _1: goal,
                                      [Symbol.for("name")]: "SolveConstraints"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: {
                        hd: {
                          TAG: 1,
                          _0: {
                            TAG: 1,
                            _0: normalization,
                            [Symbol.for("name")]: "SolveConstraintsGlobal"
                          },
                          [Symbol.for("name")]: "AgdaRequest"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* SearchAbout */1 :
          var normalization$1 = command._0;
          return Task$AgdaModeVscode.prompt(header, {
                      body: undefined,
                      placeholder: "name:",
                      value: undefined
                    }, (function (expr) {
                        return {
                                hd: {
                                  TAG: 1,
                                  _0: {
                                    TAG: 2,
                                    _0: normalization$1,
                                    _1: expr,
                                    [Symbol.for("name")]: "SearchAbout"
                                  },
                                  [Symbol.for("name")]: "AgdaRequest"
                                },
                                tl: /* [] */0
                              };
                      }));
      case /* ElaborateAndGive */2 :
          var normalization$2 = command._0;
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, expr) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 5,
                                      _0: normalization$2,
                                      _1: expr,
                                      _2: goal,
                                      [Symbol.for("name")]: "ElaborateAndGive"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return Task$AgdaModeVscode.prompt(header, {
                                      body: undefined,
                                      placeholder: "expression to elaborate and give:",
                                      value: undefined
                                    }, (function (expr) {
                                        return {
                                                hd: {
                                                  TAG: 1,
                                                  _0: {
                                                    TAG: 5,
                                                    _0: normalization$2,
                                                    _1: expr,
                                                    _2: goal,
                                                    [Symbol.for("name")]: "ElaborateAndGive"
                                                  },
                                                  [Symbol.for("name")]: "AgdaRequest"
                                                },
                                                tl: /* [] */0
                                              };
                                      }));
                        }),
                      _2: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* HelperFunctionType */3 :
          var normalization$3 = command._0;
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, expr) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 8,
                                      _0: normalization$3,
                                      _1: expr,
                                      _2: goal,
                                      [Symbol.for("name")]: "HelperFunctionType"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return Task$AgdaModeVscode.prompt(header, {
                                      body: undefined,
                                      placeholder: "expression:",
                                      value: undefined
                                    }, (function (expr) {
                                        return {
                                                hd: {
                                                  TAG: 1,
                                                  _0: {
                                                    TAG: 8,
                                                    _0: normalization$3,
                                                    _1: expr,
                                                    _2: goal,
                                                    [Symbol.for("name")]: "HelperFunctionType"
                                                  },
                                                  [Symbol.for("name")]: "AgdaRequest"
                                                },
                                                tl: /* [] */0
                                              };
                                      }));
                        }),
                      _2: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* InferType */4 :
          var normalization$4 = command._0;
          var placeholder$1 = "expression to infer:";
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, expr) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 9,
                                      _0: normalization$4,
                                      _1: expr,
                                      _2: goal,
                                      [Symbol.for("name")]: "InferType"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return Task$AgdaModeVscode.prompt(header, {
                                      body: undefined,
                                      placeholder: placeholder$1,
                                      value: undefined
                                    }, (function (expr) {
                                        return {
                                                hd: {
                                                  TAG: 1,
                                                  _0: {
                                                    TAG: 9,
                                                    _0: normalization$4,
                                                    _1: expr,
                                                    _2: goal,
                                                    [Symbol.for("name")]: "InferType"
                                                  },
                                                  [Symbol.for("name")]: "AgdaRequest"
                                                },
                                                tl: /* [] */0
                                              };
                                      }));
                        }),
                      _2: Task$AgdaModeVscode.prompt(header, {
                            body: undefined,
                            placeholder: placeholder$1,
                            value: undefined
                          }, (function (expr) {
                              return {
                                      hd: {
                                        TAG: 1,
                                        _0: {
                                          TAG: 10,
                                          _0: normalization$4,
                                          _1: expr,
                                          [Symbol.for("name")]: "InferTypeGlobal"
                                        },
                                        [Symbol.for("name")]: "AgdaRequest"
                                      },
                                      tl: /* [] */0
                                    };
                            })),
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* Context */5 :
          var normalization$5 = command._0;
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 7,
                      _0: (function (goal) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 11,
                                      _0: normalization$5,
                                      _1: goal,
                                      [Symbol.for("name")]: "Context"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* GoalType */6 :
          var normalization$6 = command._0;
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 7,
                      _0: (function (goal) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 12,
                                      _0: normalization$6,
                                      _1: goal,
                                      [Symbol.for("name")]: "GoalType"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* GoalTypeAndContext */7 :
          var normalization$7 = command._0;
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 7,
                      _0: (function (goal) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 13,
                                      _0: normalization$7,
                                      _1: goal,
                                      [Symbol.for("name")]: "GoalTypeAndContext"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* EventFromView */8 :
          var $$event = command._0;
          if (typeof $$event === "number") {
            if ($$event === /* Initialized */0) {
              return /* [] */0;
            } else {
              return {
                      hd: /* Destroy */0,
                      tl: /* [] */0
                    };
            }
          }
          switch ($$event.TAG | 0) {
            case /* InputMethod */0 :
                var $$char = $$event._0;
                if ($$char.TAG) {
                  return {
                          hd: {
                            TAG: 0,
                            _0: {
                              TAG: 13,
                              _0: {
                                TAG: 3,
                                _0: $$char._0,
                                [Symbol.for("name")]: "ChooseSymbol"
                              },
                              [Symbol.for("name")]: "InputMethod"
                            },
                            [Symbol.for("name")]: "DispatchCommand"
                          },
                          tl: /* [] */0
                        };
                } else {
                  return {
                          hd: {
                            TAG: 0,
                            _0: {
                              TAG: 13,
                              _0: {
                                TAG: 2,
                                _0: $$char._0,
                                [Symbol.for("name")]: "InsertChar"
                              },
                              [Symbol.for("name")]: "InputMethod"
                            },
                            [Symbol.for("name")]: "DispatchCommand"
                          },
                          tl: /* [] */0
                        };
                }
            case /* PromptChange */1 :
                return {
                        hd: {
                          TAG: 0,
                          _0: {
                            TAG: 13,
                            _0: {
                              TAG: 0,
                              _0: $$event._0,
                              [Symbol.for("name")]: "PromptChange"
                            },
                            [Symbol.for("name")]: "InputMethod"
                          },
                          [Symbol.for("name")]: "DispatchCommand"
                        },
                        tl: /* [] */0
                      };
            case /* JumpToTarget */2 :
                var link = $$event._0;
                return {
                        hd: {
                          TAG: 7,
                          _0: (function (state) {
                              var $$document = state.editor.document;
                              Editor$AgdaModeVscode.focus($$document);
                              var path = Parser$AgdaModeVscode.filepath($$document.fileName);
                              if (link.TAG) {
                                var index = link._0;
                                var goal = state.goals.find(function (goal) {
                                      return goal.index === index;
                                    });
                                if (goal !== undefined) {
                                  return Goal$AgdaModeVscode.setCursor(goal, state.editor);
                                } else {
                                  return ;
                                }
                              }
                              var match = link._0;
                              if (!match) {
                                return ;
                              }
                              var filePath = match._0;
                              if (filePath === undefined) {
                                return ;
                              }
                              if (path !== filePath) {
                                return ;
                              }
                              var ranges = Belt_Array.map(match._1, View__Controller$AgdaModeVscode.fromInterval);
                              return Editor$AgdaModeVscode.$$Selection.setMany(state.editor, ranges);
                            }),
                          [Symbol.for("name")]: "WithState"
                        },
                        tl: /* [] */0
                      };
            case /* MouseOver */3 :
                return {
                        hd: {
                          TAG: 11,
                          _0: "MouseOver",
                          [Symbol.for("name")]: "Debug"
                        },
                        tl: /* [] */0
                      };
            case /* MouseOut */4 :
                return {
                        hd: {
                          TAG: 11,
                          _0: "MouseOut",
                          [Symbol.for("name")]: "Debug"
                        },
                        tl: /* [] */0
                      };
            
          }
      case /* GoalTypeContextAndInferredType */9 :
          var normalization$8 = command._0;
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, expr) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 14,
                                      _0: normalization$8,
                                      _1: expr,
                                      _2: goal,
                                      [Symbol.for("name")]: "GoalTypeContextAndInferredType"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 13,
                                      _0: normalization$8,
                                      _1: goal,
                                      [Symbol.for("name")]: "GoalTypeAndContext"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _2: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* GoalTypeContextAndCheckedType */10 :
          var normalization$9 = command._0;
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, expr) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 15,
                                      _0: normalization$9,
                                      _1: expr,
                                      _2: goal,
                                      [Symbol.for("name")]: "GoalTypeContextAndCheckedType"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return Task$AgdaModeVscode.prompt(header, {
                                      body: undefined,
                                      placeholder: "expression to type:",
                                      value: undefined
                                    }, (function (expr) {
                                        return {
                                                hd: {
                                                  TAG: 1,
                                                  _0: {
                                                    TAG: 15,
                                                    _0: normalization$9,
                                                    _1: expr,
                                                    _2: goal,
                                                    [Symbol.for("name")]: "GoalTypeContextAndCheckedType"
                                                  },
                                                  [Symbol.for("name")]: "AgdaRequest"
                                                },
                                                tl: /* [] */0
                                              };
                                      }));
                        }),
                      _2: {
                        hd: {
                          TAG: 5,
                          _0: /* OutOfGoal */0,
                          [Symbol.for("name")]: "Error"
                        },
                        tl: /* [] */0
                      },
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* ModuleContents */11 :
          var normalization$10 = command._0;
          var placeholder$2 = "module name:";
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, expr) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 16,
                                      _0: normalization$10,
                                      _1: expr,
                                      _2: goal,
                                      [Symbol.for("name")]: "ModuleContents"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return Task$AgdaModeVscode.prompt(header, {
                                      body: undefined,
                                      placeholder: placeholder$2,
                                      value: undefined
                                    }, (function (expr) {
                                        return {
                                                hd: {
                                                  TAG: 1,
                                                  _0: {
                                                    TAG: 16,
                                                    _0: normalization$10,
                                                    _1: expr,
                                                    _2: goal,
                                                    [Symbol.for("name")]: "ModuleContents"
                                                  },
                                                  [Symbol.for("name")]: "AgdaRequest"
                                                },
                                                tl: /* [] */0
                                              };
                                      }));
                        }),
                      _2: Task$AgdaModeVscode.prompt(header, {
                            body: undefined,
                            placeholder: placeholder$2,
                            value: undefined
                          }, (function (expr) {
                              return {
                                      hd: {
                                        TAG: 1,
                                        _0: {
                                          TAG: 17,
                                          _0: normalization$10,
                                          _1: expr,
                                          [Symbol.for("name")]: "ModuleContentsGlobal"
                                        },
                                        [Symbol.for("name")]: "AgdaRequest"
                                      },
                                      tl: /* [] */0
                                    };
                            })),
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* ComputeNormalForm */12 :
          var computeMode = command._0;
          var placeholder$3 = "expression to normalize:";
          return {
                  hd: {
                    TAG: 6,
                    _0: {
                      TAG: 8,
                      _0: (function (goal, expr) {
                          return {
                                  hd: {
                                    TAG: 1,
                                    _0: {
                                      TAG: 18,
                                      _0: computeMode,
                                      _1: expr,
                                      _2: goal,
                                      [Symbol.for("name")]: "ComputeNormalForm"
                                    },
                                    [Symbol.for("name")]: "AgdaRequest"
                                  },
                                  tl: /* [] */0
                                };
                        }),
                      _1: (function (goal) {
                          return Task$AgdaModeVscode.prompt(header, {
                                      body: undefined,
                                      placeholder: placeholder$3,
                                      value: undefined
                                    }, (function (expr) {
                                        return {
                                                hd: {
                                                  TAG: 1,
                                                  _0: {
                                                    TAG: 18,
                                                    _0: computeMode,
                                                    _1: expr,
                                                    _2: goal,
                                                    [Symbol.for("name")]: "ComputeNormalForm"
                                                  },
                                                  [Symbol.for("name")]: "AgdaRequest"
                                                },
                                                tl: /* [] */0
                                              };
                                      }));
                        }),
                      _2: Task$AgdaModeVscode.prompt(header, {
                            body: undefined,
                            placeholder: placeholder$3,
                            value: undefined
                          }, (function (expr) {
                              return {
                                      hd: {
                                        TAG: 1,
                                        _0: {
                                          TAG: 19,
                                          _0: computeMode,
                                          _1: expr,
                                          [Symbol.for("name")]: "ComputeNormalFormGlobal"
                                        },
                                        [Symbol.for("name")]: "AgdaRequest"
                                      },
                                      tl: /* [] */0
                                    };
                            })),
                      [Symbol.for("name")]: "LocalOrGlobal2"
                    },
                    [Symbol.for("name")]: "Goal"
                  },
                  tl: /* [] */0
                };
      case /* InputMethod */13 :
          return Handle__InputMethod$AgdaModeVscode.handle(command._0);
      
    }
  }
}

exports.handle = handle;
/* Promise Not a pure module */
