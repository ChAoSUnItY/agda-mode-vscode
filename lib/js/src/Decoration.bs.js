// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var CamlinternalOO = require("bs-platform/lib/js/camlinternalOO.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

var class_tables = /* Cons */Caml_chrome_debugger.simpleVariant("Cons", [
    undefined,
    undefined,
    undefined
  ]);

function Impl(Editor) {
  var decorateHole = function (editor, param, index) {
    var end_ = param[1];
    var start = param[0];
    var backgroundRange = Curry._2(Editor.$$Range.make, Curry._2(Editor.pointAtOffset, editor, start), Curry._2(Editor.pointAtOffset, editor, end_));
    var background = Curry._3(Editor.Decoration.highlightBackground, editor, "editor.selectionHighlightBackground", backgroundRange);
    var indexText = String(index);
    var indexRange = Curry._2(Editor.$$Range.make, Curry._2(Editor.pointAtOffset, editor, start), Curry._2(Editor.pointAtOffset, editor, end_ - 2 | 0));
    var index$1 = Curry._4(Editor.Decoration.overlayText, editor, "editorLightBulb.foreground", indexText, indexRange);
    return Belt_Array.concatMany([
                background,
                index$1
              ]);
  };
  var decorateAspect = function (editor, range, aspect) {
    if (!class_tables[0]) {
      var $$class = CamlinternalOO.create_table(0);
      var env = CamlinternalOO.new_variable($$class, "");
      var env_init = function (env$1) {
        var self = CamlinternalOO.create_object_opt(undefined, $$class);
        self[env] = env$1;
        return self;
      };
      CamlinternalOO.init_class($$class);
      class_tables[0] = env_init;
    }
    return Curry._1(class_tables[0], undefined);
  };
  var decorateHighlighting = function (editor, highlighting) {
    Curry._2(Editor.$$Range.make, Curry._2(Editor.pointAtOffset, editor, highlighting.start), Curry._2(Editor.pointAtOffset, editor, highlighting.end_));
    return [];
  };
  return {
          decorateHole: decorateHole,
          decorateAspect: decorateAspect,
          decorateHighlighting: decorateHighlighting
        };
}

exports.Impl = Impl;
/* No side effect */
