// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Vscode = require("vscode");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var $$Promise = require("reason-promise/lib/js/src/js/promise.bs.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Chan$AgdaModeVscode = require("./Util/Chan.bs.js");
var Util$AgdaModeVscode = require("./Util/Util.bs.js");
var State$AgdaModeVscode = require("./State.bs.js");

var willAddChan = Chan$AgdaModeVscode.make(undefined);

var didRemoveChan = Chan$AgdaModeVscode.make(undefined);

var dict = {};

function get(fileName) {
  return Js_dict.get(dict, fileName);
}

function add(fileName, state) {
  var match = Js_dict.get(dict, fileName);
  if (match !== undefined) {
    return ;
  } else {
    Chan$AgdaModeVscode.emit(willAddChan, undefined);
    dict[fileName] = state;
    return ;
  }
}

function remove(fileName) {
  var delete_ = (function (dict, key) {delete dict[key]});
  delete_(dict, fileName);
  return Chan$AgdaModeVscode.emit(didRemoveChan, undefined);
}

function removeAndDestroy(fileName) {
  var state = Js_dict.get(dict, fileName);
  if (state !== undefined) {
    remove(fileName);
    return State$AgdaModeVscode.destroy(state, false);
  } else {
    return $$Promise.resolved(undefined);
  }
}

function removeAndDestroyAll(param) {
  return $$Promise.map(Util$AgdaModeVscode.oneByOne(Belt_Array.map(Object.keys(dict), removeAndDestroy)), (function (param) {
                
              }));
}

function isEmpty(param) {
  return Object.keys(dict).length === 0;
}

function onDidRemove(callback) {
  return new Vscode.Disposable(Chan$AgdaModeVscode.on(didRemoveChan, callback));
}

function onWillAdd(callback) {
  return new Vscode.Disposable(Chan$AgdaModeVscode.on(willAddChan, callback));
}

var Module = {
  get: get,
  add: add,
  remove: remove,
  removeAndDestroy: removeAndDestroy,
  removeAndDestroyAll: removeAndDestroyAll,
  isEmpty: isEmpty,
  onDidRemove: onDidRemove,
  onWillAdd: onWillAdd
};

exports.Module = Module;
exports.get = get;
exports.add = add;
exports.remove = remove;
exports.removeAndDestroy = removeAndDestroy;
exports.removeAndDestroyAll = removeAndDestroyAll;
exports.isEmpty = isEmpty;
exports.onDidRemove = onDidRemove;
exports.onWillAdd = onWillAdd;
/* willAddChan Not a pure module */
