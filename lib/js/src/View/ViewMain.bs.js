// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactDom = require("react-dom");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var View$AgdaModeVscode = require("../View.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var Event$AgdaModeVscode = require("../Util/Event.bs.js");
var Panel$AgdaModeVscode = require("./Panel.bs.js");
var VSCode$AgdaModeVscode = require("../VSCode.bs.js");

var vscode = acquireVsCodeApi();

var onRequest = Event$AgdaModeVscode.make(undefined);

VSCode$AgdaModeVscode.Api.onMessage((function (stringifiedJSON) {
        return Curry._1(onRequest.emit, Curry._1(View$AgdaModeVscode.$$Request.decode, JSON.parse(stringifiedJSON)));
      }));

var onResponse = Event$AgdaModeVscode.make(undefined);

Curry._1(onResponse.on, (function (response) {
        vscode.postMessage(View$AgdaModeVscode.ResponseOrEventFromView.encode(/* Response */Caml_chrome_debugger.variant("Response", 0, [response])));
        
      }));

var onEventFromView = Event$AgdaModeVscode.make(undefined);

Curry._1(onEventFromView.on, (function ($$event) {
        vscode.postMessage(View$AgdaModeVscode.ResponseOrEventFromView.encode(/* Event */Caml_chrome_debugger.variant("Event", 1, [$$event])));
        
      }));

Belt_Option.forEach(Caml_option.nullable_to_opt(document.getElementById("root")), (function (element) {
        ReactDom.render(React.createElement(Panel$AgdaModeVscode.make, {
                  onRequest: onRequest,
                  onResponse: onResponse,
                  onEventFromView: onEventFromView
                }), element);
        
      }));

exports.vscode = vscode;
exports.onRequest = onRequest;
exports.onResponse = onResponse;
exports.onEventFromView = onEventFromView;
/* vscode Not a pure module */
