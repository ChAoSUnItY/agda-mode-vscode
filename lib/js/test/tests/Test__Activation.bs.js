// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Path = require("path");
var Vscode = require("vscode");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Mocha$BsMocha = require("bs-mocha/lib/js/src/Mocha.bs.js");
var Assert$BsMocha = require("bs-mocha/lib/js/src/Assert.bs.js");
var Promise$BsMocha = require("bs-mocha/lib/js/src/Promise.bs.js");

function openTextEditor(content) {
  return $$Promise.flatMap(Vscode.workspace.openTextDocument({
                  content: content,
                  language: "agda"
                }), (function (textDocument) {
                return Vscode.window.showTextDocument(textDocument, undefined);
              }));
}

var dirname = typeof __dirname === "undefined" ? undefined : __dirname;

var dirname$1 = Belt_Option.getWithDefault(dirname === undefined ? undefined : Caml_option.some(dirname), "./");

Mocha$BsMocha.describe_only("Extention Activation")(undefined, undefined, undefined, (function (param) {
        return Promise$BsMocha.it("should be able to acquire \"banacorn.agda-mode\"")(undefined, undefined, undefined, (function (param) {
                      var extension = Vscode.extensions.getExtension("banacorn.agda-mode");
                      return $$Promise.Js.toBsPromise(extension !== undefined ? $$Promise.tap($$Promise.flatMap($$Promise.tap($$Promise.flatMap(Caml_option.valFromOption(extension).activate(), (function (param) {
                                                      var fileName = Path.join(dirname$1, "assets/A.agda");
                                                      var fileUri = Vscode.Uri.file(fileName);
                                                      return Vscode.commands.executeCommand("vscode.open", fileUri);
                                                    })), (function (prim) {
                                                  console.log(prim);
                                                  
                                                })), (function (param) {
                                              return Vscode.commands.executeCommand("agda-mode.load");
                                            })), (function (prim) {
                                          console.log(prim);
                                          
                                        })) : (Assert$BsMocha.fail("cannot acquire the extension"), $$Promise.resolved(undefined)));
                    }));
      }));

var Assert;

var P;

var source = "\ndata ℕ : Set where\n  Z : ℕ\n  S : ℕ → ?\n";

exports.Assert = Assert;
exports.P = P;
exports.source = source;
exports.openTextEditor = openTextEditor;
exports.dirname = dirname$1;
/* dirname Not a pure module */
