// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Path = require("path");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Process = require("process");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var VscodeTest = require("vscode-test");

var dirname = typeof __dirname === "undefined" ? undefined : __dirname;

var testSuiteAdapterFileName = "TestSuiteAdapter.bs.js";

if (dirname !== undefined) {
  console.log("__dirname " + dirname);
  var extensionDevelopmentPath = Path.resolve(dirname, "../");
  var extensionTestsPath = Path.resolve(dirname, testSuiteAdapterFileName);
  console.log("extensionDevelopmentPath " + extensionDevelopmentPath);
  console.log("extensionTestsPath " + extensionTestsPath);
  $$Promise.get(VscodeTest.runTests({
            extensionDevelopmentPath: extensionDevelopmentPath,
            extensionTestsPath: extensionTestsPath
          }), (function (prim) {
          return Process.exit(prim);
        }));
} else {
  console.log("Failed to read __dirname");
  Process.exit(1);
}

var dirname$1 = dirname === undefined ? undefined : Caml_option.some(dirname);

exports.dirname = dirname$1;
exports.testSuiteAdapterFileName = testSuiteAdapterFileName;
/* dirname Not a pure module */
