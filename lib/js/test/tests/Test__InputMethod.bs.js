// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Vscode = require("vscode");
var $$Promise = require("reason-promise/lib/js/src/js/promise.bs.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Mocha$BsMocha = require("bs-mocha/lib/js/src/Mocha.bs.js");
var Main$AgdaModeVscode = require("../../src/Main.bs.js");
var Util$AgdaModeVscode = require("../../src/Util/Util.bs.js");
var Editor$AgdaModeVscode = require("../../src/Editor.bs.js");
var Test__Util$AgdaModeVscode = require("./Test__Util.bs.js");

function activateExtension(fileName) {
  var disposables = [];
  var extensionPath = Test__Util$AgdaModeVscode.Path.extensionPath(undefined);
  var emitter = Main$AgdaModeVscode.activateWithoutContext(disposables, extensionPath);
  return $$Promise.map(Vscode.window.showTextDocument(Vscode.Uri.file(fileName), undefined), (function (editor) {
                return {
                        editor: editor,
                        emitter: emitter
                      };
              }));
}

function acquire(setup) {
  var setup$1 = setup.contents;
  if (setup$1 !== undefined) {
    return $$Promise.resolved({
                TAG: 0,
                _0: Caml_option.valFromOption(setup$1),
                [Symbol.for("name")]: "Ok"
              });
  } else {
    return $$Promise.resolved({
                TAG: 1,
                _0: {
                  RE_EXN_ID: Util$AgdaModeVscode.$$Error,
                  _1: "Cannot acquire the setup"
                },
                [Symbol.for("name")]: "Error"
              });
  }
}

function cleanup(setup) {
  var range = new Vscode.Range(new Vscode.Position(0, 0), new Vscode.Position(100, 0));
  return Editor$AgdaModeVscode.$$Text.replace(setup.editor.document, range, "");
}

function insertChar(setup, $$char) {
  var promise = Curry._1(setup.emitter.once, undefined);
  var positions = Editor$AgdaModeVscode.Cursor.getMany(setup.editor);
  return $$Promise.map($$Promise.flatMap(Editor$AgdaModeVscode.$$Text.batchInsert(setup.editor.document, positions, $$char), (function (param) {
                    return promise;
                  })), (function (x) {
                return {
                        TAG: 0,
                        _0: x,
                        [Symbol.for("name")]: "Ok"
                      };
              }));
}

function backspace(setup) {
  var promise = Curry._1(setup.emitter.once, undefined);
  var end_ = Editor$AgdaModeVscode.Cursor.get(setup.editor);
  var start = end_.translate(0, -1);
  var range = new Vscode.Range(start, end_);
  return $$Promise.map($$Promise.flatMap(Editor$AgdaModeVscode.$$Text.$$delete(setup.editor.document, range), (function (param) {
                    return promise;
                  })), (function (x) {
                return {
                        TAG: 0,
                        _0: x,
                        [Symbol.for("name")]: "Ok"
                      };
              }));
}

function activate(setup, positions, param) {
  var promise = Curry._1(setup.emitter.once, undefined);
  var positions$1 = Belt_Option.getWithDefault(positions, Editor$AgdaModeVscode.Cursor.getMany(setup.editor));
  Editor$AgdaModeVscode.Cursor.setMany(setup.editor, positions$1);
  return $$Promise.map($$Promise.flatMap($$Promise.flatMap(Vscode.commands.executeCommand("agda-mode.input-symbol[Activate]"), (function (result) {
                        return result;
                      })), (function (param) {
                    return promise;
                  })), (function (x) {
                return {
                        TAG: 0,
                        _0: x,
                        [Symbol.for("name")]: "Ok"
                      };
              }));
}

function deactivate(setup) {
  var promise = Curry._1(setup.emitter.once, undefined);
  return $$Promise.map($$Promise.flatMap($$Promise.flatMap(Vscode.commands.executeCommand("agda-mode.escape"), (function (result) {
                        return result;
                      })), (function (param) {
                    return promise;
                  })), (function (x) {
                return {
                        TAG: 0,
                        _0: x,
                        [Symbol.for("name")]: "Ok"
                      };
              }));
}

var IM = {
  activate: activate,
  deactivate: deactivate
};

Mocha$BsMocha.describe("Input Method (Editor)")(undefined, undefined, undefined, (function (param) {
        var setup = {
          contents: undefined
        };
        Test__Util$AgdaModeVscode.Q.before(function (param) {
              return $$Promise.map(activateExtension(Test__Util$AgdaModeVscode.Path.asset("InputMethod.agda")), (function (value) {
                            setup.contents = value;
                            return {
                                    TAG: 0,
                                    _0: undefined,
                                    [Symbol.for("name")]: "Ok"
                                  };
                          }));
            });
        Test__Util$AgdaModeVscode.Q.after_each(function (param) {
              return $$Promise.mapOk(acquire(setup), cleanup);
            });
        Mocha$BsMocha.describe("Insertion")(undefined, undefined, undefined, (function (param) {
                Test__Util$AgdaModeVscode.Q.it("should translate \"lambdabar\" to \"λ\"", (function (param) {
                        return $$Promise.flatMapOk(acquire(setup), (function (setup) {
                                      var $$document = setup.editor.document;
                                      return $$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk(activate(setup, undefined, undefined), (function (param) {
                                                                                                                                                                return Test__Util$AgdaModeVscode.A.equal(/* Activate */1, param);
                                                                                                                                                              })), (function (param) {
                                                                                                                                                            return insertChar(setup, "l");
                                                                                                                                                          })), (function (param) {
                                                                                                                                                        return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                                                                                      })), (function (param) {
                                                                                                                                                    return Test__Util$AgdaModeVscode.A.equal("←", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                                                                                  })), (function (param) {
                                                                                                                                                return insertChar(setup, "a");
                                                                                                                                              })), (function (param) {
                                                                                                                                            return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                                                                          })), (function (param) {
                                                                                                                                        return Test__Util$AgdaModeVscode.A.equal("←a", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                                                                      })), (function (param) {
                                                                                                                                    return insertChar(setup, "m");
                                                                                                                                  })), (function (param) {
                                                                                                                                return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                                                              })), (function (param) {
                                                                                                                            return Test__Util$AgdaModeVscode.A.equal("←am", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                                                          })), (function (param) {
                                                                                                                        return insertChar(setup, "b");
                                                                                                                      })), (function (param) {
                                                                                                                    return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                                                  })), (function (param) {
                                                                                                                return Test__Util$AgdaModeVscode.A.equal("←amb", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                                              })), (function (param) {
                                                                                                            return insertChar(setup, "d");
                                                                                                          })), (function (param) {
                                                                                                        return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                                      })), (function (param) {
                                                                                                    return Test__Util$AgdaModeVscode.A.equal("←ambd", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                                  })), (function (param) {
                                                                                                return insertChar(setup, "a");
                                                                                              })), (function (param) {
                                                                                            return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                          })), (function (param) {
                                                                                        return Test__Util$AgdaModeVscode.A.equal("λ", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                      })), (function (param) {
                                                                                    return insertChar(setup, "b");
                                                                                  })), (function (param) {
                                                                                return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                              })), (function (param) {
                                                                            return Test__Util$AgdaModeVscode.A.equal("λb", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                          })), (function (param) {
                                                                        return insertChar(setup, "a");
                                                                      })), (function (param) {
                                                                    return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                  })), (function (param) {
                                                                return Test__Util$AgdaModeVscode.A.equal("λba", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                              })), (function (param) {
                                                            return insertChar(setup, "r");
                                                          })), (function (param) {
                                                        return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                      })), (function (param) {
                                                    return Test__Util$AgdaModeVscode.A.equal("ƛ", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                  }));
                                    }));
                      }));
                return Test__Util$AgdaModeVscode.Q.it("should translate \"bn\" to \"𝕟\"", (function (param) {
                              return $$Promise.flatMapOk(acquire(setup), (function (setup) {
                                            var $$document = setup.editor.document;
                                            return $$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk(activate(setup, undefined, undefined), (function (param) {
                                                                                  return Test__Util$AgdaModeVscode.A.equal(/* Activate */1, param);
                                                                                })), (function (param) {
                                                                              return insertChar(setup, "b");
                                                                            })), (function (param) {
                                                                          return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                        })), (function (param) {
                                                                      return Test__Util$AgdaModeVscode.A.equal("♭", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                    })), (function (param) {
                                                                  return insertChar(setup, "n");
                                                                })), (function (param) {
                                                              return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                            })), (function (param) {
                                                          return Test__Util$AgdaModeVscode.A.equal("𝕟", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                        }));
                                          }));
                            }));
              }));
        Mocha$BsMocha.describe("Backspacing")(undefined, undefined, undefined, (function (param) {
                return Test__Util$AgdaModeVscode.Q.it("should work just fine", (function (param) {
                              return $$Promise.flatMapOk(acquire(setup), (function (setup) {
                                            var $$document = setup.editor.document;
                                            return $$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk(activate(setup, undefined, undefined), (function (param) {
                                                                                                                                                      return Test__Util$AgdaModeVscode.A.equal(/* Activate */1, param);
                                                                                                                                                    })), (function (param) {
                                                                                                                                                  return insertChar(setup, "l");
                                                                                                                                                })), (function (param) {
                                                                                                                                              return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                                                                            })), (function (param) {
                                                                                                                                          return Test__Util$AgdaModeVscode.A.equal("←", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                                                                        })), (function (param) {
                                                                                                                                      return insertChar(setup, "a");
                                                                                                                                    })), (function (param) {
                                                                                                                                  return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                                                                })), (function (param) {
                                                                                                                              return Test__Util$AgdaModeVscode.A.equal("←a", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                                                            })), (function (param) {
                                                                                                                          return insertChar(setup, "m");
                                                                                                                        })), (function (param) {
                                                                                                                      return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                                                    })), (function (param) {
                                                                                                                  return Test__Util$AgdaModeVscode.A.equal("←am", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                                                })), (function (param) {
                                                                                                              return insertChar(setup, "b");
                                                                                                            })), (function (param) {
                                                                                                          return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                                        })), (function (param) {
                                                                                                      return Test__Util$AgdaModeVscode.A.equal("←amb", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                                    })), (function (param) {
                                                                                                  return insertChar(setup, "d");
                                                                                                })), (function (param) {
                                                                                              return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                            })), (function (param) {
                                                                                          return Test__Util$AgdaModeVscode.A.equal("←ambd", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                                        })), (function (param) {
                                                                                      return insertChar(setup, "a");
                                                                                    })), (function (param) {
                                                                                  return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                                })), (function (param) {
                                                                              return Test__Util$AgdaModeVscode.A.equal("λ", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                            })), (function (param) {
                                                                          return backspace(setup);
                                                                        })), (function (param) {
                                                                      return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                    })), (function (param) {
                                                                  return Test__Util$AgdaModeVscode.A.equal("lambd", Editor$AgdaModeVscode.$$Text.getAll($$document));
                                                                })), (function (param) {
                                                              return deactivate(setup);
                                                            })), (function (param) {
                                                          return Test__Util$AgdaModeVscode.A.equal(/* Deactivate */2, param);
                                                        }));
                                          }));
                            }));
              }));
        return Mocha$BsMocha.describe("Multiple cursors at once")(undefined, undefined, undefined, (function (param) {
                      var positions = [
                        new Vscode.Position(0, 0),
                        new Vscode.Position(1, 0),
                        new Vscode.Position(2, 0),
                        new Vscode.Position(3, 0)
                      ];
                      return Test__Util$AgdaModeVscode.Q.it("should work just fine", (function (param) {
                                    var partial_arg = /\r\n/g;
                                    var replaceCRLF = function (param) {
                                      return param.replace(partial_arg, "\n");
                                    };
                                    return $$Promise.flatMapOk(acquire(setup), (function (setup) {
                                                  var $$document = setup.editor.document;
                                                  return $$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMapOk($$Promise.flatMap(Editor$AgdaModeVscode.$$Text.insert($$document, new Vscode.Position(0, 0), "\n\n\n"), (function (param) {
                                                                                            return activate(setup, positions, undefined);
                                                                                          })), (function (param) {
                                                                                        return Test__Util$AgdaModeVscode.A.equal(/* Activate */1, param);
                                                                                      })), (function (param) {
                                                                                    return insertChar(setup, "b");
                                                                                  })), (function (param) {
                                                                                return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                              })), (function (param) {
                                                                            return Test__Util$AgdaModeVscode.A.equal("♭\n♭\n♭\n♭", Curry._1(replaceCRLF, Editor$AgdaModeVscode.$$Text.getAll($$document)));
                                                                          })), (function (param) {
                                                                        return insertChar(setup, "n");
                                                                      })), (function (param) {
                                                                    return Test__Util$AgdaModeVscode.A.equal(/* Change */0, param);
                                                                  })), (function (param) {
                                                                return Test__Util$AgdaModeVscode.A.equal("𝕟\n𝕟\n𝕟\n𝕟", Curry._1(replaceCRLF, Editor$AgdaModeVscode.$$Text.getAll($$document)));
                                                              }));
                                                }));
                                  }));
                    }));
      }));

var VSRange;

var Js$prime;

var Js;

exports.VSRange = VSRange;
exports.Js$prime = Js$prime;
exports.Js = Js;
exports.activateExtension = activateExtension;
exports.acquire = acquire;
exports.cleanup = cleanup;
exports.insertChar = insertChar;
exports.backspace = backspace;
exports.IM = IM;
/*  Not a pure module */
