// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Mocha$BsMocha = require("bs-mocha/lib/js/src/Mocha.bs.js");
var Assert$BsMocha = require("bs-mocha/lib/js/src/Assert.bs.js");
var Parser$AgdaModeVscode = require("../../../src/Parser/Parser.bs.js");

Mocha$BsMocha.describe("when running Parser.userInputToSExpr")(undefined, undefined, undefined, (function (param) {
        Mocha$BsMocha.it("should make escaped backslash explicit")(undefined, undefined, undefined, (function (param) {
                var actual = Parser$AgdaModeVscode.userInputToSExpr("\\ x -> x");
                Assert$BsMocha.deep_equal(undefined, actual, "\\\\ x -> x");
              }));
        Mocha$BsMocha.it("should make escaped newline on Unix explicit")(undefined, undefined, undefined, (function (param) {
                var actual = Parser$AgdaModeVscode.userInputToSExpr("x\ny");
                Assert$BsMocha.deep_equal(undefined, actual, "x\\ny");
              }));
        Mocha$BsMocha.it("should make escaped newline on Windows explicit")(undefined, undefined, undefined, (function (param) {
                var actual = Parser$AgdaModeVscode.userInputToSExpr("x\r\ny");
                Assert$BsMocha.deep_equal(undefined, actual, "x\\r\\ny");
              }));
        Mocha$BsMocha.it("should make escaped double quote explicit")(undefined, undefined, undefined, (function (param) {
                var actual = Parser$AgdaModeVscode.userInputToSExpr("\"x\"");
                Assert$BsMocha.deep_equal(undefined, actual, "\\\"x\\\"");
              }));
      }));

var Assert;

exports.Assert = Assert;
/*  Not a pure module */
