// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Task$AgdaModeVscode = require("./Task/Task.bs.js");

function Impl(Editor) {
  var Task = Task$AgdaModeVscode.Impl(Editor);
  var Cursor = { };
  var activate = function (editor, offsets) {
    var cursors = {
      traced: offsets
    };
    var find = function (cursors, offset) {
      return Belt_Array.get(Belt_Array.keep(cursors.traced, (function (x) {
                        return x === offset;
                      })), 0);
    };
    var handle;
    var listener = function (change) {
      console.log(change);
      var changedCursor = find(cursors, change.offset);
      if (changedCursor !== undefined) {
        console.log(String(changedCursor) + " changed");
      }
      
    };
    handle = Caml_option.some(Curry._1(Editor.onChange, (function (changes) {
                return Belt_Array.forEach(changes, listener);
              })));
    
  };
  return {
          Task: Task,
          Cursor: Cursor,
          activate: activate
        };
}

exports.Impl = Impl;
/* Task-AgdaModeVscode Not a pure module */
