// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var $$Promise = require("reason-promise/lib/js/src/js/promise.bs.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Goal$AgdaModeVscode = require("../Goal.bs.js");
var Decoration$AgdaModeVscode = require("../Decoration.bs.js");

function handle(highlightings) {
  if (typeof highlightings === "number") {
    switch (highlightings) {
      case /* Clear */0 :
          return {
                  hd: {
                    TAG: 7,
                    _0: (function (state) {
                        return Decoration$AgdaModeVscode.removeAppliedDecorations(state.decorations);
                      }),
                    [Symbol.for("name")]: "WithState"
                  },
                  tl: /* [] */0
                };
      case /* Apply */1 :
          return {
                  hd: {
                    TAG: 9,
                    _0: "$$$ Decoration",
                    [Symbol.for("name")]: "BenchStart"
                  },
                  tl: {
                    hd: {
                      TAG: 8,
                      _0: (function (state) {
                          return $$Promise.map(Decoration$AgdaModeVscode.readTempFiles(state.decorations), (function (param) {
                                        Decoration$AgdaModeVscode.applyHighlightings(state.decorations, state.editor);
                                        return /* [] */0;
                                      }));
                        }),
                      [Symbol.for("name")]: "WithStateP"
                    },
                    tl: {
                      hd: {
                        TAG: 10,
                        _0: "$$$ Decoration",
                        [Symbol.for("name")]: "BenchEnd"
                      },
                      tl: /* [] */0
                    }
                  }
                };
      case /* ApplyExperimental */2 :
          return {
                  hd: {
                    TAG: 9,
                    _0: "$$$ Decoration (experimental)",
                    [Symbol.for("name")]: "BenchStart"
                  },
                  tl: {
                    hd: {
                      TAG: 8,
                      _0: (function (_state) {
                          console.log("YO");
                          return $$Promise.resolved(/* [] */0);
                        }),
                      [Symbol.for("name")]: "WithStateP"
                    },
                    tl: {
                      hd: {
                        TAG: 10,
                        _0: "$$$ Decoration (experimental)",
                        [Symbol.for("name")]: "BenchEnd"
                      },
                      tl: /* [] */0
                    }
                  }
                };
      case /* Refresh */3 :
          return {
                  hd: {
                    TAG: 9,
                    _0: "$$$ Refreshing decorations",
                    [Symbol.for("name")]: "BenchStart"
                  },
                  tl: {
                    hd: {
                      TAG: 7,
                      _0: (function (state) {
                          Decoration$AgdaModeVscode.refresh(state.editor, state.decorations);
                          return Belt_Array.forEach(state.goals, (function (goal) {
                                        return Goal$AgdaModeVscode.refreshDecoration(goal, state.editor);
                                      }));
                        }),
                      [Symbol.for("name")]: "WithState"
                    },
                    tl: {
                      hd: {
                        TAG: 10,
                        _0: "$$$ Refreshing decorations",
                        [Symbol.for("name")]: "BenchEnd"
                      },
                      tl: /* [] */0
                    }
                  }
                };
      
    }
  } else {
    if (highlightings.TAG) {
      var filepath = highlightings._0;
      return {
              hd: {
                TAG: 7,
                _0: (function (state) {
                    return Decoration$AgdaModeVscode.addIndirectly(state.decorations, filepath);
                  }),
                [Symbol.for("name")]: "WithState"
              },
              tl: /* [] */0
            };
    }
    var highlightings$1 = highlightings._0;
    return {
            hd: {
              TAG: 7,
              _0: (function (state) {
                  return Decoration$AgdaModeVscode.addDirectly(state.decorations, highlightings$1);
                }),
              [Symbol.for("name")]: "WithState"
            },
            tl: /* [] */0
          };
  }
}

exports.handle = handle;
/* Promise Not a pure module */
