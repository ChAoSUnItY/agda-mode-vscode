// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Webapi__Dom__Element = require("bs-webapi/lib/js/src/Webapi/Webapi__Dom/Webapi__Dom__Element.js");
var Emacs__Error$AgdaModeVscode = require("./Emacs/Emacs__Error.bs.js");

function Body(Props) {
  var body = Props.body;
  var onSubmit = Props.onSubmit;
  var onChange = Props.onChange;
  if (typeof body === "number") {
    return React.createElement(React.Fragment, undefined);
  }
  switch (body.tag | 0) {
    case /* Plain */0 :
        return React.createElement("div", {
                    className: "agda-mode-body"
                  }, body[0]);
    case /* Error */1 :
        return React.createElement("div", {
                    className: "agda-mode-body"
                  }, React.createElement(Emacs__Error$AgdaModeVscode.make, {
                        payload: body[0]
                      }));
    case /* Query */2 :
        var placeholder = Belt_Option.getWithDefault(body[0], "");
        var value = Belt_Option.getWithDefault(body[1], "");
        var onChange$1 = function ($$event) {
          return Curry._1(onChange, $$event.target.value);
        };
        var onSubmit$1 = function (_event) {
          return Curry._1(onSubmit, value);
        };
        return React.createElement("div", {
                    className: "agda-mode-query"
                  }, React.createElement("form", {
                        onSubmit: onSubmit$1
                      }, React.createElement("input", {
                            ref: (function (ref) {
                                setTimeout((function (param) {
                                        Belt_Option.forEach(Belt_Option.flatMap((ref == null) ? undefined : Caml_option.some(ref), Webapi__Dom__Element.asHtmlElement), (function (prim) {
                                                prim.focus();
                                                
                                              }));
                                        
                                      }), 100);
                                
                              }),
                            placeholder: placeholder,
                            type: "text",
                            value: value,
                            onChange: onChange$1
                          })));
    
  }
}

var make = Body;

exports.make = make;
/* react Not a pure module */
