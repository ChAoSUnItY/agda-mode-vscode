// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Async$BsMocha = require("bs-mocha/lib/js/src/Async.bs.js");
var Mocha$BsMocha = require("bs-mocha/lib/js/src/Mocha.bs.js");
var Assert$BsMocha = require("bs-mocha/lib/js/src/Assert.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

Mocha$BsMocha.describe("Some Test Suite")(undefined, undefined, undefined, (function (param) {
        return Mocha$BsMocha.describe("List.map")(undefined, undefined, undefined, (function (param) {
                      Mocha$BsMocha.it("should map the values")(undefined, undefined, undefined, (function (param) {
                              return Assert$BsMocha.deep_equal(undefined, List.map((function (param) {
                                                return (param << 1);
                                              }), /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                1,
                                                /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                    2,
                                                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                        3,
                                                        /* [] */0
                                                      ])
                                                  ])
                                              ])), /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                            2,
                                            /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                4,
                                                /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                    6,
                                                    /* [] */0
                                                  ])
                                              ])
                                          ]));
                            }));
                      return Mocha$BsMocha.it("should work with an empty list")(undefined, undefined, undefined, (function (param) {
                                    return Assert$BsMocha.equal(undefined, List.map((function (param) {
                                                      return (param << 1);
                                                    }), /* [] */0), /* [] */0);
                                  }));
                    }));
      }));

var it$prime = Async$BsMocha.it;

var it_skip$prime = Async$BsMocha.it_skip;

exports.it$prime = it$prime;
exports.it_skip$prime = it_skip$prime;
/*  Not a pure module */
