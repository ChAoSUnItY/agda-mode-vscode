// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");

function empty(self) {
  var queue = self.queue;
  self.queue = /* [] */0;
  return queue;
}

function make(param) {
  var match = $$Promise.pending(undefined);
  return {
          queue: /* [] */0,
          status: /* Idle */1,
          execute: undefined,
          terminationPromise: match[0],
          terminate: match[1],
          shouldTerminate: false
        };
}

function setup(self, execute) {
  self.execute = execute;
  
}

function run(self) {
  var match = self.status;
  if (match) {
    var match$1 = self.queue;
    if (match$1) {
      self.status = /* Busy */0;
      self.queue = match$1[1];
      var execute = self.execute;
      if (execute !== undefined) {
        $$Promise.get(Curry._1(execute, match$1[0]), (function (keepRunning) {
                self.status = /* Idle */1;
                if (keepRunning) {
                  return run(self);
                } else {
                  console.log("RUNNER STOPED");
                  return ;
                }
              }));
      } else {
        self.status = /* Idle */1;
        run(self);
      }
    }
    
  }
  if (self.shouldTerminate) {
    return Curry._1(self.terminate, undefined);
  }
  
}

function pushAndRun(self, xs) {
  self.queue = Belt_List.concat(self.queue, xs);
  return run(self);
}

function terminate(self) {
  var match = self.status;
  if (match) {
    return Curry._1(self.terminate, undefined);
  } else {
    self.shouldTerminate = true;
    return ;
  }
}

exports.empty = empty;
exports.make = make;
exports.setup = setup;
exports.run = run;
exports.pushAndRun = pushAndRun;
exports.terminate = terminate;
/* Promise Not a pure module */
