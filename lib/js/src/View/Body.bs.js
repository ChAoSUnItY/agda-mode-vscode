// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var Component$AgdaModeVscode = require("./Component/Component.bs.js");
var Emacs__Parser2$AgdaModeVscode = require("./Emacs/Emacs__Parser2.bs.js");

function Body(Props) {
  var body = Props.body;
  if (typeof body === "number") {
    return React.createElement(React.Fragment, undefined);
  }
  if (body.tag) {
    var body$1 = body[2];
    var items;
    switch (body[0]) {
      case /* Outputs */0 :
          items = Emacs__Parser2$AgdaModeVscode.parseOutputs(body$1);
          break;
      case /* AllGoalsWarnings */1 :
          items = Emacs__Parser2$AgdaModeVscode.parseAllGoalsWarnings(body[1], body$1);
          break;
      case /* GoalType */2 :
          items = Emacs__Parser2$AgdaModeVscode.parseGoalType(body$1);
          break;
      case /* SearchAbout */3 :
          items = Emacs__Parser2$AgdaModeVscode.parseSearchAbout(body$1);
          break;
      case /* Error */4 :
          items = Emacs__Parser2$AgdaModeVscode.parseError(body$1);
          break;
      case /* Text */5 :
          items = Emacs__Parser2$AgdaModeVscode.parseText(body$1);
          break;
      
    }
    return React.createElement("div", {
                className: "agda-mode-body"
              }, React.createElement("ul", undefined, Belt_Array.mapWithIndex(items, (function (i, item) {
                          return React.createElement(Component$AgdaModeVscode.Item.make, {
                                      item: item,
                                      key: String(i)
                                    });
                        }))));
  }
  var items$1 = [/* PlainText */Caml_chrome_debugger.variant("PlainText", 0, [Component$AgdaModeVscode.$$Text.parse(body[0])])];
  return React.createElement("div", {
              className: "agda-mode-body"
            }, React.createElement("ul", undefined, Belt_Array.mapWithIndex(items$1, (function (i, item) {
                        return React.createElement(Component$AgdaModeVscode.Item.make, {
                                    item: item,
                                    key: String(i)
                                  });
                      }))));
}

var make = Body;

exports.make = make;
/* react Not a pure module */
