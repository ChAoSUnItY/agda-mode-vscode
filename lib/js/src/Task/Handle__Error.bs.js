// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Task$AgdaModeVscode = require("./Task.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var Parser$AgdaModeVscode = require("../Parser.bs.js");
var Connection$AgdaModeVscode = require("../Connection.bs.js");

function Impl(Editor) {
  var Task = Task$AgdaModeVscode.Impl(Editor);
  var handle = function (error) {
    if (typeof error === "number") {
      switch (error) {
        case /* Cancelled */0 :
            return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                      Curry._2(Task.displayError, "Query Cancelled", undefined),
                      /* [] */0
                    ]);
        case /* OutOfGoal */1 :
            return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                      Curry._2(Task.displayError, "Out of goal", "Please place the cursor in a goal"),
                      /* [] */0
                    ]);
        case /* NoTextSelectedAndOutOfGoal */2 :
            return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                      Curry._2(Task.displayError, "No text selected and cursor out of goal", "Please select some text or place the cursor in a goal"),
                      /* [] */0
                    ]);
        
      }
    } else {
      if (error.tag) {
        var body = Parser$AgdaModeVscode.$$Error.toString(error[0]);
        return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                  Curry._2(Task.displayError, "Internal Parse Error", body),
                  /* [] */0
                ]);
      }
      var match = Connection$AgdaModeVscode.$$Error.toString(error[0]);
      return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                Curry._2(Task.displayError, "Connection Error: " + match[0], match[1]),
                /* [] */0
              ]);
    }
  };
  return {
          Task: Task,
          handle: handle
        };
}

exports.Impl = Impl;
/* Task-AgdaModeVscode Not a pure module */
