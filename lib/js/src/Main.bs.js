// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Vscode = require("vscode");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var View$AgdaModeVscode = require("./View.bs.js");
var State$AgdaModeVscode = require("./State.bs.js");
var Command$AgdaModeVscode = require("./Command.bs.js");

var dict = { };

function get(editor) {
  return Js_dict.get(dict, editor.document.fileName);
}

function getByFileName(fileName) {
  return Js_dict.get(dict, fileName);
}

function set(fileName, state) {
  dict[fileName] = state;
  
}

function isLoaded(editor) {
  return Belt_Option.isSome(Js_dict.get(dict, editor.document.fileName));
}

function dispose(param) {
  return Belt_Array.map(Js_dict.entries(dict), (function (param) {
                return State$AgdaModeVscode.dispose(param[1]);
              }));
}

var States = {
  dict: dict,
  get: get,
  getByFileName: getByFileName,
  set: set,
  isLoaded: isLoaded,
  dispose: dispose
};

function getState(context) {
  return Belt_Option.map(Vscode.window.activeTextEditor, (function (editor) {
                var state = get(editor);
                if (state !== undefined) {
                  return state;
                }
                var state$1 = State$AgdaModeVscode.make(context, editor);
                set(editor.document.fileName, state$1);
                return state$1;
              }));
}

function activate(context) {
  context.subscriptions.push(Vscode.window.onDidChangeActiveTextEditor((function (editor) {
              return Belt_Option.forEach(Belt_Option.flatMap(editor, get), View$AgdaModeVscode.activate);
            })));
  context.subscriptions.push(Vscode.workspace.onDidCloseTextDocument((function (textDoc) {
              return Belt_Option.forEach(Belt_Option.flatMap(Belt_Option.map(textDoc, (function (prim) {
                                    return prim.fileName;
                                  })), getByFileName), State$AgdaModeVscode.dispose);
            })));
  context.subscriptions.push(Vscode.commands.registerCommand("extension.load", (function (param) {
              return Belt_Option.forEach(getState(context), Command$AgdaModeVscode.load);
            })));
  
}

function deactive(param) {
  return dispose(undefined);
}

exports.States = States;
exports.getState = getState;
exports.activate = activate;
exports.deactive = deactive;
/* vscode Not a pure module */
