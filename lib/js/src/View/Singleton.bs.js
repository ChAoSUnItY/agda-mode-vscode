// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var $$Promise = require("reason-promise/lib/js/src/js/promise.bs.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var WebviewPanel$AgdaModeVscode = require("./WebviewPanel.bs.js");

var handle = {
  contents: undefined
};

function make(extensionPath) {
  var panel = handle.contents;
  if (panel !== undefined) {
    return Caml_option.valFromOption(panel);
  }
  var panel$1 = WebviewPanel$AgdaModeVscode.make("Agda", extensionPath);
  handle.contents = Caml_option.some(panel$1);
  $$Promise.get(WebviewPanel$AgdaModeVscode.onceDestroyed(panel$1), (function (param) {
          handle.contents = undefined;
          
        }));
  return panel$1;
}

function destroy(param) {
  Belt_Option.forEach(handle.contents, WebviewPanel$AgdaModeVscode.destroy);
  handle.contents = undefined;
  
}

var Panel = {
  make: make,
  destroy: destroy
};

var handle$1 = {
  contents: undefined
};

function get(param) {
  return handle$1.contents;
}

function make$1(extensionPath) {
  var panel = handle$1.contents;
  if (panel !== undefined) {
    return Caml_option.valFromOption(panel);
  }
  var panel$1 = WebviewPanel$AgdaModeVscode.make("Agda Debug Buffer", extensionPath);
  handle$1.contents = Caml_option.some(panel$1);
  $$Promise.get(WebviewPanel$AgdaModeVscode.onceDestroyed(panel$1), (function (param) {
          handle$1.contents = undefined;
          
        }));
  return panel$1;
}

function destroy$1(param) {
  Belt_Option.forEach(handle$1.contents, WebviewPanel$AgdaModeVscode.destroy);
  handle$1.contents = undefined;
  
}

var DebugBuffer = {
  get: get,
  make: make$1,
  destroy: destroy$1
};

exports.Panel = Panel;
exports.DebugBuffer = DebugBuffer;
/* Promise Not a pure module */
