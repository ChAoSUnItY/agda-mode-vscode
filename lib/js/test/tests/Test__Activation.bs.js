// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Vscode = require("vscode");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Mocha$BsMocha = require("bs-mocha/lib/js/src/Mocha.bs.js");
var Assert$BsMocha = require("bs-mocha/lib/js/src/Assert.bs.js");
var Promise$BsMocha = require("bs-mocha/lib/js/src/Promise.bs.js");
var Editor$AgdaModeVscode = require("../../src/Editor.bs.js");
var Test__Util$AgdaModeVscode = require("./Test__Util.bs.js");

var dirname = typeof __dirname === "undefined" ? undefined : __dirname;

var dirname$1 = Belt_Option.getWithDefault(dirname === undefined ? undefined : Caml_option.some(dirname), "./");

function openTextEditor(path) {
  return $$Promise.flatMap(Vscode.workspace.openTextDocument(path), (function (textDocument) {
                return Vscode.window.showTextDocument(textDocument, undefined);
              }));
}

Mocha$BsMocha.describe_skip("Extention Activation")(undefined, undefined, undefined, (function (param) {
        return Promise$BsMocha.it("should be able to acquire \"banacorn.agda-mode\"")(undefined, undefined, undefined, (function (param) {
                      var extension = Vscode.extensions.getExtension("banacorn.agda-mode");
                      var tmp;
                      if (extension !== undefined) {
                        var extension$1 = Caml_option.valFromOption(extension);
                        tmp = $$Promise.flatMap(openTextEditor(Test__Util$AgdaModeVscode.Path.asset("A.agda")), (function (editor) {
                                return $$Promise.tap($$Promise.flatMap($$Promise.flatMap(extension$1.activate(), (function (param) {
                                                      return Vscode.commands.executeCommand("agda-mode.load");
                                                    })), (function (param) {
                                                  return Test__Util$AgdaModeVscode.wait(1000);
                                                })), (function (param) {
                                              console.log(Editor$AgdaModeVscode.getText(editor));
                                              
                                            }));
                              }));
                      } else {
                        Assert$BsMocha.fail("cannot acquire the extension");
                        tmp = $$Promise.resolved(undefined);
                      }
                      return $$Promise.Js.toBsPromise(tmp);
                    }));
      }));

var Assert;

var P;

var source = "\ndata ℕ : Set where\n  Z : ℕ\n  S : ℕ → ?\n";

exports.Assert = Assert;
exports.P = P;
exports.source = source;
exports.dirname = dirname$1;
exports.openTextEditor = openTextEditor;
/* dirname Not a pure module */
