// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Parser$AgdaModeVscode = require("../../Parser/Parser.bs.js");
var Source$LanguageServerMule = require("language-server-mule/lib/js/src/Source.bs.js");
var Client__Process$LanguageServerMule = require("language-server-mule/lib/js/src/Client/Client__Process.bs.js");
var Connection__Process$AgdaModeVscode = require("../Connection__Process.bs.js");

function toString(x) {
  if (typeof x === "number") {
    return [
            "Connection Error",
            "Connection via TCP not supported yet"
          ];
  }
  switch (x.TAG | 0) {
    case /* CannotAcquireHandle */0 :
        return [
                "Cannot connect with \"agda\"",
                "Here are the error messages from all the attempts: \n" + Belt_Array.map(x._0, Source$LanguageServerMule.$$Error.toString).join("\n")
              ];
    case /* Validation */1 :
        return Curry._1(Connection__Process$AgdaModeVscode.Validation.$$Error.toString, x._0);
    case /* Process */2 :
        return [
                "Process Error",
                Client__Process$LanguageServerMule.$$Event.toString(x._0)
              ];
    case /* AgdaError */3 :
        return [
                "Agda Error",
                x._0
              ];
    case /* ResponseParseError */4 :
        return [
                "Internal Parse Error",
                Parser$AgdaModeVscode.$$Error.toString(x._0)
              ];
    
  }
}

var Process;

exports.Process = Process;
exports.toString = toString;
/* Parser-AgdaModeVscode Not a pure module */
