// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var Event$AgdaModeVscode = require("./Util/Event.bs.js");
var Connection$AgdaModeVscode = require("./Connection.bs.js");

function Impl(Editor) {
  var getEditor = function (state) {
    return state.editor;
  };
  var onDestroy = function (state, callback) {
    return Curry._1(Editor.Disposable.make, Curry._1(state.onDestroyEventEmitter.on, callback));
  };
  var connect = function (state) {
    var connection = state.connection;
    if (connection !== undefined) {
      return $$Promise.resolved(/* Ok */Caml_chrome_debugger.variant("Ok", 0, [connection]));
    } else {
      return $$Promise.resolved(/* Error */Caml_chrome_debugger.variant("Error", 1, [undefined]));
    }
  };
  var disconnect = function (state) {
    var connection = state.connection;
    if (connection !== undefined) {
      return Connection$AgdaModeVscode.disconnect(connection);
    } else {
      return $$Promise.resolved(undefined);
    }
  };
  var sendRequest = function (state, request) {
    
  };
  var destroy = function (state) {
    Curry._1(state.onDestroyEventEmitter.destroy, undefined);
    Curry._1(state.onDestroyEventEmitter.emit, undefined);
    return disconnect(state);
  };
  var make = function (context, editor) {
    return {
            editor: editor,
            context: context,
            connection: undefined,
            onDestroyEventEmitter: Event$AgdaModeVscode.make(undefined)
          };
  };
  return {
          getEditor: getEditor,
          onDestroy: onDestroy,
          connect: connect,
          disconnect: disconnect,
          sendRequest: sendRequest,
          destroy: destroy,
          make: make
        };
}

exports.Impl = Impl;
/* Promise Not a pure module */
