// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Goal$AgdaModeVscode = require("../Goal.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var Decoration$AgdaModeVscode = require("../Decoration.bs.js");

function handle(highlightings) {
  if (typeof highlightings === "number") {
    switch (highlightings) {
      case /* Clear */0 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* WithState */Caml_chrome_debugger.variant("WithState", 7, [(function (state) {
                            return Decoration$AgdaModeVscode.removeAppliedDecorations(state.decorations);
                          })]),
                    /* [] */0
                  ]);
      case /* Apply */1 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* BenchStart */Caml_chrome_debugger.variant("BenchStart", 9, ["$$$ Decoration"]),
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        /* WithStateP */Caml_chrome_debugger.variant("WithStateP", 8, [(function (state) {
                                return $$Promise.map(Decoration$AgdaModeVscode.readTempFiles(state.decorations), (function (param) {
                                              Decoration$AgdaModeVscode.applyHighlightings(state.decorations, state.editor);
                                              return /* [] */0;
                                            }));
                              })]),
                        /* :: */Caml_chrome_debugger.simpleVariant("::", [
                            /* BenchEnd */Caml_chrome_debugger.variant("BenchEnd", 10, ["$$$ Decoration"]),
                            /* [] */0
                          ])
                      ])
                  ]);
      case /* ApplyExperimental */2 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* BenchStart */Caml_chrome_debugger.variant("BenchStart", 9, ["$$$ Decoration (experimental)"]),
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        /* WithStateP */Caml_chrome_debugger.variant("WithStateP", 8, [(function (_state) {
                                console.log("YO");
                                return $$Promise.resolved(/* [] */0);
                              })]),
                        /* :: */Caml_chrome_debugger.simpleVariant("::", [
                            /* BenchEnd */Caml_chrome_debugger.variant("BenchEnd", 10, ["$$$ Decoration (experimental)"]),
                            /* [] */0
                          ])
                      ])
                  ]);
      case /* Refresh */3 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* BenchStart */Caml_chrome_debugger.variant("BenchStart", 9, ["$$$ Refreshing decorations"]),
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        /* WithState */Caml_chrome_debugger.variant("WithState", 7, [(function (state) {
                                Decoration$AgdaModeVscode.refresh(state.editor, state.decorations);
                                return Belt_Array.forEach(state.goals, (function (goal) {
                                              return Goal$AgdaModeVscode.refreshDecoration(goal, state.editor);
                                            }));
                              })]),
                        /* :: */Caml_chrome_debugger.simpleVariant("::", [
                            /* BenchEnd */Caml_chrome_debugger.variant("BenchEnd", 10, ["$$$ Refreshing decorations"]),
                            /* [] */0
                          ])
                      ])
                  ]);
      
    }
  } else {
    if (highlightings.tag) {
      var filepath = highlightings[0];
      return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                /* WithState */Caml_chrome_debugger.variant("WithState", 7, [(function (state) {
                        return Decoration$AgdaModeVscode.addIndirectly(state.decorations, filepath);
                      })]),
                /* [] */0
              ]);
    }
    var highlightings$1 = highlightings[0];
    return /* :: */Caml_chrome_debugger.simpleVariant("::", [
              /* WithState */Caml_chrome_debugger.variant("WithState", 7, [(function (state) {
                      return Decoration$AgdaModeVscode.addDirectly(state.decorations, highlightings$1);
                    })]),
              /* [] */0
            ]);
  }
}

exports.handle = handle;
/* Promise Not a pure module */
